addClassPath(ScriptPath + "jfreechart-1.0.19.jar");
addClassPath(ScriptPath + "jcommon-1.0.23.jar"); 

import javax.swing.JFrame;
import org.jfree.chart.*;
import org.jfree.chart.plot.*;
import org.jfree.data.xy.*;
import org.jfree.chart.renderer.xy.*;
import org.jfree.chart.annotations.XYTextAnnotation;
import org.jfree.chart.title.*;

int i;

// String sSaveFolder = "D:\\BTisler\\temp\\PrintProfile\\";
String sSaveFolder = System.getProperty("java.io.tmpdir",".") + "\\PrintProfile\\";

String sChartName;
String sXNameAndUnit;
String sYUnit;
String sY1Name;
String sY2Name;
String sY3Name;
String sY4Name;
String sY5Name;
String sY6Name;
String sY7Name;
String sY8Name;
String sY9Name;

boolean bY1 = false;
boolean bY2 = false;
boolean bY3 = false;
boolean bY4 = false;
boolean bY5 = false;
boolean bY6 = false;
boolean bY7 = false;
boolean bY8 = false;
boolean bY9 = false;

XYSeries seriesY1;
XYSeries seriesY2;
XYSeries seriesY3;
XYSeries seriesY4;
XYSeries seriesY6;
XYSeries seriesY7;
XYSeries seriesY8;
XYSeries seriesY9;

Button sPrevButton;
Button sNextButton;

File fileOut;
int iFileNum = 0;
boolean bFileOutIsOpen = false;
String s;

ActionListener alPrev = new ActionListener() {
    public void actionPerformed( ActionEvent e ) {
    	   if (iFileNum > 1) {    	   
            iFileNum--;
            printf("File: " + iFileNum + "\n");
    	   }
    }
};

ActionListener alNext = new ActionListener() {
    public void actionPerformed( ActionEvent e ) {
        iFileNum++;
        printf("File: " + iFileNum + "\n");
    }
};

JFrame sFrameChart = new JFrame();

JFileChooser fc = new JFileChooser();
// fc.setCurrentDirectory(new java.io.File("."));
fc.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
int returnVal = fc.showSaveDialog(sFrameChart);
if (returnVal == JFileChooser.APPROVE_OPTION) {
    sSaveFolder = fc.getSelectedFile().getAbsolutePath() + "\\";
} 

fileOut = openFile(sSaveFolder + iFileNum + ".txt");

msg = read(fileOut);
printf("1: " + msg + "\n");
if (msg.length() > 0) {
    String[] tokens = msg.split("[\\-\\:]");

    if (tokens[0].compareTo("HSXYChart;Name") == 0) {
   	
        for (i=1; i<tokens.length; i++) {
            if (tokens[i].compareTo("ChartName") == 0) {
                sChartName = new String(tokens[i+1]);
            }
            else if (tokens[i].compareTo("XNameAndUnit") == 0) {
                sXNameAndUnit = new String(tokens[i+1]);
            }
            else if (tokens[i].compareTo("YUnit") == 0) {
                sYUnit = new String(tokens[i+1]);
            }
            else if (tokens[i].compareTo("Y1Name") == 0) {
                sY1Name = new String(tokens[i+1]);
                seriesY1 = new XYSeries(sY1Name);
                bY1 = true;
            }
            else if (tokens[i].compareTo("Y2Name") == 0) {
                sY2Name = new String(tokens[i+1]);
                seriesY2 = new XYSeries(sY2Name);
                bY2 = true;
            }
            else if (tokens[i].compareTo("Y3Name") == 0) {
                sY3Name = new String(tokens[i+1]);
                seriesY3 = new XYSeries(sY3Name);
                bY3 = true;
            }
            else if (tokens[i].compareTo("Y4Name") == 0) {
                sY4Name = new String(tokens[i+1]);
                seriesY4 = new XYSeries(sY4Name);
                bY4 = true;
            }
            else if (tokens[i].compareTo("Y5Name") == 0) {
                sY5Name = new String(tokens[i+1]);
                seriesY5 = new XYSeries(sY5Name);
                bY5 = true;
            }
            else if (tokens[i].compareTo("Y6Name") == 0) {
                sY6Name = new String(tokens[i+1]);
                seriesY6 = new XYSeries(sY6Name);
                bY6 = true;
            }
            else if (tokens[i].compareTo("Y7Name") == 0) {
                sY7Name = new String(tokens[i+1]);
                seriesY7 = new XYSeries(sY7Name);
                bY7 = true;
            }
            else if (tokens[i].compareTo("Y8Name") == 0) {
                sY8Name = new String(tokens[i+1]);
                seriesY8 = new XYSeries(sY8Name);
                bY8 = true;
            }
            else if (tokens[i].compareTo("Y9Name") == 0) {
                sY9Name = new String(tokens[i+1]);
                seriesY9 = new XYSeries(sY9Name);
                bY9 = true;
            }
        }
    }
}

close(fileOut);
iFileNum++;

XYSeriesCollection dataset = new XYSeriesCollection();

if (bY1) dataset.addSeries(seriesY1);
if (bY2) dataset.addSeries(seriesY2);
if (bY3) dataset.addSeries(seriesY3);
if (bY4) dataset.addSeries(seriesY4);
if (bY5) dataset.addSeries(seriesY5);
if (bY6) dataset.addSeries(seriesY6);
if (bY7) dataset.addSeries(seriesY7);
if (bY8) dataset.addSeries(seriesY8);
if (bY9) dataset.addSeries(seriesY9);

JFreeChart chart = ChartFactory.createXYLineChart(
    sChartName,               // chart title
    sXNameAndUnit,            // x axis label
    sYUnit,                   // y axis label
    dataset,                  // data
    PlotOrientation.VERTICAL,
    true,                     // include legend
    true,                     // tooltips
    false                     // urls
);

ChartPanel chartPanel = new ChartPanel(chart);
XYPlot plot = chart.getXYPlot( );
XYLineAndShapeRenderer renderer = new XYLineAndShapeRenderer( );
renderer.setSeriesPaint( 0 , Color.BLACK );
renderer.setSeriesPaint( 1 , Color.PINK );
renderer.setSeriesPaint( 2 , Color.WHITE );
renderer.setSeriesPaint( 3 , Color.GRAY );
renderer.setSeriesPaint( 4 , Color.YELLOW );
renderer.setSeriesPaint( 5 , Color.MAGENTA );
renderer.setSeriesPaint( 6 , Color.RED );
renderer.setSeriesPaint( 7 , Color.BLUE );
plot.setRenderer( renderer ); 

JPanel sMainPanel = new JPanel();
JPanel sButtonPanel = new JPanel();
sMainPanel.setLayout(new BorderLayout());
sMainPanel.add(chartPanel, BorderLayout.CENTER);
sPrevButton = new Button("Prev");
sPrevButton.addActionListener(alPrev);
sNextButton = new Button("Next");
sNextButton.addActionListener(alNext);
sButtonPanel.add(sPrevButton);
sButtonPanel.add(sNextButton);
sMainPanel.add(sButtonPanel, BorderLayout.SOUTH);
sFrameChart.add(sMainPanel);
sFrameChart.pack();
sFrameChart.setVisible(true);

Scanner scanner;
int x = 0;
int iFileNumOld = 0;

do {

if (iFileNumOld != iFileNum) {
    fileOut = new File(sSaveFolder + iFileNum + ".txt");
    if (!fileOut.exists()) {
        iFileNum--;
    }
    else {    
	    s = read(fileOut);
	    scanner = new Scanner(s);
	    iFileNumOld = iFileNum;
    }
}
else {
	sleep(100);
}

do {
    if (scanner.hasNextLine())
    {
        msg = scanner.nextLine();
        printf("2: " + msg + "\n");
    }
    else
    {
        msg = "";
    }
    
    if (msg.length() > 0) {

        msg = msg.replace(":-", ":~");
        // printf("3: " + msg + "\n");
        String[] tokens = msg.split("[\\;\\-\\:]");
        
        if (tokens[0].compareTo("HSXYChart") == 0) {

            for (i=1; i<tokens.length; i++) {
            
                if (tokens[i].compareTo("Begin") == 0) {
                    plot.clearAnnotations();
                    LegendTitle legendTitle = chart.getLegend();
                    chart.clearSubtitles();
                    chart.addLegend(legendTitle);
                    
                    if (bY1) seriesY1 = new XYSeries(sY1Name);
                    if (bY2) seriesY2 = new XYSeries(sY2Name);
                    if (bY3) seriesY3 = new XYSeries(sY3Name);
                    if (bY4) seriesY4 = new XYSeries(sY4Name);
                    if (bY5) seriesY5 = new XYSeries(sY5Name);
                    if (bY6) seriesY6 = new XYSeries(sY6Name);
                    if (bY7) seriesY7 = new XYSeries(sY7Name);
                    if (bY8) seriesY8 = new XYSeries(sY8Name);
                    if (bY9) seriesY9 = new XYSeries(sY9Name);

                    x = 0;
                }

                if (tokens[i].compareTo("RecName") == 0) {
                    chart.addSubtitle(0, new TextTitle(tokens[i+1]));				
                }
                
                if (tokens[i].compareTo("XVal") == 0) {
                    x = Integer.parseInt(tokens[i+1]);
                }

                if (tokens[i].compareTo("Y1Val") == 0) {
                	tok = tokens[i+1].replace('~', '-');
                    y1 = Integer.parseInt(tok);
                    seriesY1.add(x, y1);
                }
                if (tokens[i].compareTo("Y2Val") == 0) {
                	tok = tokens[i+1].replace('~', '-');
                    y2 = Integer.parseInt(tok);
                    seriesY2.add(x, y2);
                }
                if (tokens[i].compareTo("Y3Val") == 0) {
                	tok = tokens[i+1].replace('~', '-');
                    y3 = Integer.parseInt(tok);
                    seriesY3.add(x, y3);
                }
                if (tokens[i].compareTo("Y4Val") == 0) {
                	tok = tokens[i+1].replace('~', '-');
                    y4 = Integer.parseInt(tok);
                    seriesY4.add(x, y4);
                }
                if (tokens[i].compareTo("Y5Val") == 0) {
                	tok = tokens[i+1].replace('~', '-');
                    y5 = Integer.parseInt(tok);
                    seriesY5.add(x, y5);
                }
                if (tokens[i].compareTo("Y6Val") == 0) {
                	tok = tokens[i+1].replace('~', '-');
                    y6 = Integer.parseInt(tok);
                    seriesY6.add(x, y6);
                }
                if (tokens[i].compareTo("Y7Val") == 0) {
                	tok = tokens[i+1].replace('~', '-');
                    y7 = Integer.parseInt(tok);
                    seriesY7.add(x, y7);
                }
                if (tokens[i].compareTo("Y8Val") == 0) {
                	tok = tokens[i+1].replace('~', '-');
                    y8 = Integer.parseInt(tok);
                    seriesY8.add(x, y8);
                }
                if (tokens[i].compareTo("Y9Val") == 0) {
                	tok = tokens[i+1].replace('~', '-');
                    y9 = Integer.parseInt(tok);
                    seriesY9.add(x, y9);
                }

                if (tokens[i].compareTo("Y8Text") == 0) {
                	tok = tokens[i+1];
                    XYTextAnnotation textXY = new XYTextAnnotation(tok, x, y8+20);
                    plot.addAnnotation(textXY);                    
                }
                
                if (tokens[i].compareTo("End") == 0) {   
                    dataset.removeAllSeries();           	
                    if (bY1) dataset.addSeries(seriesY1);
                    if (bY2) dataset.addSeries(seriesY2);
                    if (bY3) dataset.addSeries(seriesY3);
                    if (bY4) dataset.addSeries(seriesY4);
                    if (bY5) dataset.addSeries(seriesY5);
                    if (bY6) dataset.addSeries(seriesY6);
                    if (bY7) dataset.addSeries(seriesY7);
                    if (bY8) dataset.addSeries(seriesY8);
                    if (bY9) dataset.addSeries(seriesY9);
                }
            
            }
          
        }

    }
} while(scanner.hasNextLine());

} while(sFrameChart.isShowing());
